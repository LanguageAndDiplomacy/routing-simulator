eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"routing-simulator/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"routing-simulator/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=routing-simulator/app.js");

;eval("define(\"routing-simulator/controllers/admin\", \n  [\"ember\",\"routing-simulator/utils/ajax\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n      message: null,\n      pendingFrom: null,\n      pendingTo: null,\n      actions: {\n        reset: function() {\n          var _this = this;\n          ajax({\n            type: \'POST\',\n            url: \'/admin/reset\'\n          }).then(function() {\n            return \'Reset successful!\';\n          }, function(err) {\n            console.log(err);\n            return \'Reset failed!\';\n          }).then(function(msg) {\n            _this.set(\'message\', msg);\n          });\n        },\n        generateRingTopology: function() {\n          var _this = this;\n          ajax({\n            type: \'POST\',\n            url: \'/admin/topology/ring\',\n            dataType: \'json\'\n          }).then(function(connections) {\n            _this.set(\'model\', connections);\n          });\n        },\n        removeConnection: function(conn) {\n          var _this = this;\n          var removeFromUI = function() { _this.removeObject(conn); };\n          ajax({\n            type: \'DELETE\',\n            url: [\'/connections\', conn.from, conn.to].join(\'/\'),\n          }).then(removeFromUI, removeFromUI);\n        },\n        addConnection: function() {\n          var _this = this;\n          var from = this.get(\'pendingFrom\');\n          var to = this.get(\'pendingTo\');\n          if (!to || !from) {\n            return;\n          }\n          var conn = {from: from, to: to};\n          ajax({\n            type: \'POST\',\n            url: \'/connections\',\n            data: JSON.stringify(conn),\n            contentType: \'application/json\',\n            dataType: \'json\'\n          }).then(function(conn) {\n            _this.pushObject(conn);\n          }, function(err) {\n            console.log(err);\n            _this.set(\'message\', \'Unable to add connection!\');\n          });\n        }\n      }\n    });\n  });//# sourceURL=routing-simulator/controllers/admin.js");

;eval("define(\"routing-simulator/utils/ajax\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function ajax(opts) {\n      return new Ember.RSVP.Promise(function(resolve, reject) {\n        opts.success = resolve;\n        opts.error = reject;\n        Ember.$.ajax(opts);\n      });\n    }\n  });//# sourceURL=routing-simulator/utils/ajax.js");

;eval("define(\"routing-simulator/controllers/login\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    // login controller\n    __exports__[\"default\"] = Ember.Controller.extend({\n      name: null,\n      isLoggedIn: false,\n      completeLogin: function() {\n        this.set(\'isLoggedIn\', true);\n        this.transitionToRoute(\'index\');\n      },\n      actions: {\n        login: function() {\n          var name = this.get(\'name\');\n          if (name) {\n            var payload = JSON.stringify({id: name});\n            var _this = this;\n            Ember.$.ajax({\n              type: \'POST\',\n              url: \'/users\',\n              data: payload,\n              processData: false,\n              contentType: \'application/json\',\n              success: this.completeLogin.bind(this),\n              error: function(xhr) {\n                if (xhr.status === 409) {\n                  _this.completeLogin();\n                  return;\n                }\n                console.log(\'error logging in\');\n              }\n            });\n          }\n        }\n      }\n    });\n  });//# sourceURL=routing-simulator/controllers/login.js");

;eval("define(\"routing-simulator/controllers/messages\", \n  [\"ember\",\"routing-simulator/utils/ajax\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n      needs: [\'login\'],\n      sortProperties: [\'id\'],\n      sortAscending: false,\n\n      me: Ember.computed.alias(\'controllers.login.name\'),\n      latestMessageId: Ember.computed.alias(\'firstObject.id\'),\n\n      pendingTo: null,\n      pendingText: null,\n      pendingMessage: Ember.computed(\'pendingTo\', \'pendingText\', \'me\', function() {\n        var msg = {\n          to: this.get(\'pendingTo\'),\n          body: this.get(\'pendingText\'),\n          from: this.get(\'me\')\n        };\n        if (msg.to && msg.body && msg.from) {\n          return msg;\n        }\n        return null;\n      }),\n      pendingMessageInvalid: Ember.computed.equal(\'pendingMessage\', null),\n\n      composerIsOpen: false,\n      composerSendSuccess: false,\n      composerIsSending: false,\n\n      cantSend: Ember.computed.or(\'composerIsSending\', \'pendingMessageInvalid\'),\n\n      actions: {\n        openComposer: function() {\n          this.set(\'composerIsOpen\', true);\n          this.set(\'composerSendSuccess\', false);\n        },\n        cancelComposer: function() {\n          this.set(\'composerIsOpen\', false);\n          this.set(\'pendingTo\', null);\n          this.set(\'pendingText\', null);\n        },\n        send: function() {\n          var _this = this;\n          this.set(\'composerIsSending\', true);\n          ajax({\n            type: \'POST\',\n            url: \'/messages\',\n            data: JSON.stringify(this.get(\'pendingMessage\')),\n            contentType: \'application/json\',\n            dataType: \'json\'\n          }).then(function(msg) {\n            _this.set(\'pendingText\', null);\n            _this.set(\'composerSendSuccess\', true);\n            _this.set(\'composerIsOpen\', false);\n            _this.set(\'composerIsSending\', false);\n            _this.get(\'sentMessages\').unshiftObject(msg);\n          });\n        }\n      }\n    });\n  });//# sourceURL=routing-simulator/controllers/messages.js");

;eval("define(\"routing-simulator/controllers/users\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    });\n  });//# sourceURL=routing-simulator/controllers/users.js");

;eval("define(\"routing-simulator/initializers/export-application-global\", \n  [\"ember\",\"routing-simulator/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=routing-simulator/initializers/export-application-global.js");

;eval("define(\"routing-simulator/router\", \n  [\"ember\",\"routing-simulator/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.route(\'login\');\n      this.route(\'users\');\n      this.route(\'messages\');\n      this.route(\'admin\');\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=routing-simulator/router.js");

;eval("define(\"routing-simulator/routes/admin\", \n  [\"ember\",\"routing-simulator/utils/ajax\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n\n    // admin route\n    __exports__[\"default\"] = Ember.Route.extend({\n      beforeModel: function() {\n        var login = this.controllerFor(\'login\');\n        if (login.get(\'isLoggedIn\') && login.get(\'name\') === \'tealsteachers\') {\n          return;\n        }\n        this.transitionTo(\'login\');\n      },\n      model: function() {\n        var _this = this;\n        return Ember.RSVP.hash({\n          connections: ajax({ type: \'GET\', url: \'/connections\', dataType: \'json\' }),\n          users: ajax({ type: \'GET\', url: \'/users\', dataType: \'json\' })\n        }).then(function(models) {\n          _this.set(\'users\', models.users);\n          return models.connections;\n        });\n      },\n      setupController: function(controller, model) {\n        this._super(controller, model);\n        controller.set(\'users\', this.get(\'users\'));\n      }\n    });\n  });//# sourceURL=routing-simulator/routes/admin.js");

;eval("define(\"routing-simulator/routes/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    // index route\n    __exports__[\"default\"] = Ember.Route.extend({\n      beforeModel: function() {\n        var target = \'login\';\n        var login = this.controllerFor(\'login\');\n        if (login.get(\'isLoggedIn\')) {\n          target = login.get(\'name\') === \'tealsteachers\' ? \'admin\' : \'messages\';\n        }\n        this.transitionTo(target);\n      }\n    });\n  });//# sourceURL=routing-simulator/routes/index.js");

;eval("define(\"routing-simulator/routes/login\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    });\n  });//# sourceURL=routing-simulator/routes/login.js");

;eval("define(\"routing-simulator/routes/messages\", \n  [\"ember\",\"routing-simulator/utils/ajax\",\"routing-simulator/utils/poller\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n    var Poller = __dependency3__[\"default\"];\n\n    function get(url) {\n      return ajax({ type: \'GET\', url: url, dataType: \'json\' });\n    }\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      myUserName: function() {\n        return this.controllerFor(\'login\').get(\'name\');\n      },\n      beforeModel: function() {\n        var login = this.controllerFor(\'login\');\n        if (!login.get(\'isLoggedIn\')) {\n          this.transitionTo(\'login\');\n        }\n      },\n      model: function() {\n        var _this = this;\n        var name = this.myUserName();\n        var msgs = get(\'/users/\' + name + \'/messages\');\n        var sent = get(\'/users/\' + name + \'/sent-messages\');\n        var conns = get(\'/connections?related-to=\' + name);\n\n        var p = Ember.RSVP.hash({msgs: msgs, conns: conns, sent: sent});\n        return p.then(function(hash) {\n          _this.set(\'connections\', hash.conns);\n          hash.sent.sort(function(msg1, msg2) { return msg2.id - msg1.id; });\n          _this.set(\'sentMessages\', hash.sent);\n          return hash.msgs;\n        });\n      },\n      setupController: function(controller, model) {\n        this._super(controller, model);\n        controller.set(\'connections\', this.get(\'connections\'));\n        var sent = Ember.ArrayController.create({model: this.get(\'sentMessages\')});\n        controller.set(\'sentMessages\', sent);\n        this.setupPoller(controller);\n      },\n      setupPoller: function(controller) {\n        if (Ember.isNone(this.get(\'poller\'))) {\n          var _this = this;\n          var p = Poller.create({\n            interval: 3000,\n            isPolling: false,\n            onPoll: function() {\n              var poller = this;\n              if (this.get(\'isPolling\')) {\n                return;\n              }\n              this.set(\'isPolling\', true);\n              var latest = controller.get(\'latestMessageId\');\n              var query = latest ? \'?since=\' + latest : \'\';\n              ajax({\n                type: \'GET\',\n                url: \'/users/\' + _this.myUserName() + \'/messages\' + query,\n                dataType: \'json\'\n              }).then(function(results) {\n                controller.get(\'model\').pushObjects(results);\n              })[\"finally\"](function() {\n                poller.set(\'isPolling\', false);\n              });\n            }\n          });\n          this.set(\'poller\', p);\n        }\n        this.get(\'poller\').start();\n      },\n      deactivate: function() {\n        this.get(\'poller\').stop();\n      }\n    });\n  });//# sourceURL=routing-simulator/routes/messages.js");

;eval("define(\"routing-simulator/utils/poller\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Poller = Ember.Object.extend({\n     // Time between polls (in ms)\n      interval: 5000,\n\n      // Schedules the function `f` to be executed every `interval` time.\n      schedule: function(f) {\n        return Ember.run.later(this, function() {\n          f.apply(this);\n          this.set(\'timer\', this.schedule(f));\n        }, this.get(\'interval\'));\n      },\n\n      // Stops the pollster\n      stop: function() {\n        Ember.run.cancel(this.get(\'timer\'));\n      },\n\n      // Starts the pollster, i.e. executes the `onPoll` function every interval.\n      start: function() {\n        this.set(\'timer\', this.schedule(this.get(\'onPoll\')));\n      },\n\n      onPoll: Ember.K\n    });\n\n    __exports__[\"default\"] = Poller;\n  });//# sourceURL=routing-simulator/utils/poller.js");

;eval("define(\"routing-simulator/routes/users\", \n  [\"ember\",\"routing-simulator/utils/ajax\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n\n    // users route\n    __exports__[\"default\"] = Ember.Route.extend({\n      model: function() {\n        return ajax({\n          type: \'GET\',\n          url: \'/users\',\n          dataType: \'json\'\n        });\n      }\n    });\n  });//# sourceURL=routing-simulator/routes/users.js");

;eval("define(\"routing-simulator/templates/admin\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <tr>\\n          <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"conn.from\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n          <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"conn.to\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n          <td><button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeConnection\", \"conn\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">X</button></td>\\n        </tr>\\n      \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"user.id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div>\");\n      stack1 = helpers._triageMustache.call(depth0, \"message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n<div>\\n  <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"reset\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Reset Sim</button>\\n</div>\\n<div>\\n  <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"generateRingTopology\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Generate Ring Topology</button>\\n</div>\\n<div class=\\\"panel\\\">\\n  <h3>Connections</h3>\\n  <table>\\n    <tbody>\\n      <tr>\\n        <td>\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"pendingFrom\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</td>\\n        <td>\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"pendingTo\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</td>\\n        <td><button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addConnection\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Add</button></td>\\n      </tr>\\n      \");\n      stack1 = helpers.each.call(depth0, \"conn\", \"in\", \"controller\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </tbody>\\n  </table>\\n</div>\\n<div class=\\\"users panel\\\">\\n  <h3>Users</h3>\\n  <ul>\\n    \");\n      stack1 = helpers.each.call(depth0, \"user\", \"in\", \"users\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </ul>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=routing-simulator/templates/admin.js");

;eval("define(\"routing-simulator/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<h2 id=\'title\'>Intro to Computer Science Routing Simulator</h2>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=routing-simulator/templates/application.js");

;eval("define(\"routing-simulator/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=routing-simulator/templates/index.js");

;eval("define(\"routing-simulator/templates/login\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<form>\\n  <p>Name: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"name\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</p>\\n  <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"login\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Login</button>\\n</form>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=routing-simulator/templates/login.js");

;eval("define(\"routing-simulator/templates/messages\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"conn\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n  \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      <li>\\n        Message #<span class=\\\"message-number\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"msg.id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>,\\n        From: <span class=\\\"message-from\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"msg.from\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n        <br>\\n        <span class=\\\"message-body\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"msg.body\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n      </li>\\n    \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\';\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"No \");\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      <li>\\n        Message #<span class=\\\"message-number\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"msg.id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>,\\n        To: <span class=\\\"message-from\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"msg.to\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n        <br>\\n        <span class=\\\"message-body\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"msg.body\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n      </li>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h2>Hello, <i>\");\n      stack1 = helpers._triageMustache.call(depth0, \"me\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</i></h2>\\n<p>You can <a href=\\\"javascript:null;\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"openComposer\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">send</a> and receive messages from:</p>\\n<ul class=\\\"connections\\\">\\n  \");\n      stack1 = helpers.each.call(depth0, \"conn\", \"in\", \"connections\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</ul>\\n\\n<div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":composer composerIsOpen::hidden\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n  <h3>Send a message</h3>\\n  <form>\\n    <p>To: <br>\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n        \'content\': (\"connections\"),\n        \'value\': (\"pendingTo\")\n      },hashTypes:{\'content\': \"ID\",\'value\': \"ID\"},hashContexts:{\'content\': depth0,\'value\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"</p>\\n    <p>Message: <br>\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"pendingText\"),\n        \'cols\': (80),\n        \'rows\': (5)\n      },hashTypes:{\'value\': \"ID\",\'cols\': \"INTEGER\",\'rows\': \"INTEGER\"},hashContexts:{\'value\': depth0,\'cols\': depth0,\'rows\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"</p>\\n    <p>\\n      <button \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"cantSend\")\n      },hashTypes:{\'disabled\': \"ID\"},hashContexts:{\'disabled\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"send\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Send</button>\\n      <button \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"composerIsSending\")\n      },hashTypes:{\'disabled\': \"ID\"},hashContexts:{\'disabled\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"cancelComposer\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Cancel</button>\\n    </p>\\n  </form>\\n</div>\\n<div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":composer-success composerSendSuccess::hidden\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n  <b>Your message was successfully sent!</b>\\n  <a href=\\\"javascript:null;\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"openComposer\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Send another message</a>\\n</div>\\n\\n<div class=\\\"messages\\\">\\n  <h3>You have \");\n      stack1 = helpers._triageMustache.call(depth0, \"controller.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" messages:</h3>\\n\\n  <ul>\\n    \");\n      stack1 = helpers.each.call(depth0, \"msg\", \"in\", \"controller\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </ul>\\n</div>\\n\\n<div class=\\\"sent messages\\\">\\n  <h3>\");\n      stack1 = helpers[\'if\'].call(depth0, \"sentMessages.length\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"Sent Messages:</h3>\\n\\n  <ul>\\n    \");\n      stack1 = helpers.each.call(depth0, \"msg\", \"in\", \"sentMessages\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </ul>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=routing-simulator/templates/messages.js");

;eval("define(\"routing-simulator/templates/users\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n  <p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"user.id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n\");\n      return buffer;\n      }\n\n      stack1 = helpers.each.call(depth0, \"user\", \"in\", \"controller\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=routing-simulator/templates/users.js");

;eval("define(\"routing-simulator/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/app.jshint.js");

;eval("define(\"routing-simulator/tests/controllers/admin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/admin.js should pass jshint\', function() { \n      ok(true, \'controllers/admin.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/controllers/admin.jshint.js");

;eval("define(\"routing-simulator/tests/controllers/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/login.js should pass jshint\', function() { \n      ok(true, \'controllers/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/controllers/login.jshint.js");

;eval("define(\"routing-simulator/tests/controllers/messages.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/messages.js should pass jshint\', function() { \n      ok(true, \'controllers/messages.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/controllers/messages.jshint.js");

;eval("define(\"routing-simulator/tests/controllers/users.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/users.js should pass jshint\', function() { \n      ok(true, \'controllers/users.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/controllers/users.jshint.js");

;eval("define(\"routing-simulator/tests/helpers/resolver\", \n  [\"ember/resolver\",\"routing-simulator/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=routing-simulator/tests/helpers/resolver.js");

;eval("define(\"routing-simulator/tests/helpers/start-app\", \n  [\"ember\",\"routing-simulator/app\",\"routing-simulator/router\",\"routing-simulator/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      return App;\n    }\n  });//# sourceURL=routing-simulator/tests/helpers/start-app.js");

;eval("define(\"routing-simulator/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/router.jshint.js");

;eval("define(\"routing-simulator/tests/routes/admin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/admin.js should pass jshint\', function() { \n      ok(true, \'routes/admin.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routes/admin.jshint.js");

;eval("define(\"routing-simulator/tests/routes/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/index.js should pass jshint\', function() { \n      ok(true, \'routes/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routes/index.jshint.js");

;eval("define(\"routing-simulator/tests/routes/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/login.js should pass jshint\', function() { \n      ok(true, \'routes/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routes/login.jshint.js");

;eval("define(\"routing-simulator/tests/routes/messages.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/messages.js should pass jshint\', function() { \n      ok(true, \'routes/messages.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routes/messages.jshint.js");

;eval("define(\"routing-simulator/tests/routes/users.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/users.js should pass jshint\', function() { \n      ok(true, \'routes/users.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routes/users.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/helpers\');\n    test(\'routing-simulator/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/helpers/resolver.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/helpers\');\n    test(\'routing-simulator/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/helpers/start-app.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests\');\n    test(\'routing-simulator/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/test-helper.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/controllers/admin-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/controllers\');\n    test(\'routing-simulator/tests/unit/controllers/admin-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/controllers/admin-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/controllers/admin-test.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/controllers/connections-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/controllers\');\n    test(\'routing-simulator/tests/unit/controllers/connections-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/controllers/connections-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/controllers/connections-test.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/controllers/login-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/controllers\');\n    test(\'routing-simulator/tests/unit/controllers/login-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/controllers/login-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/controllers/login-test.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/controllers/messages-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/controllers\');\n    test(\'routing-simulator/tests/unit/controllers/messages-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/controllers/messages-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/controllers/messages-test.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/controllers/users-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/controllers\');\n    test(\'routing-simulator/tests/unit/controllers/users-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/controllers/users-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/controllers/users-test.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/routes/admin-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/routes\');\n    test(\'routing-simulator/tests/unit/routes/admin-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/routes/admin-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/routes/admin-test.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/routes/index-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/routes\');\n    test(\'routing-simulator/tests/unit/routes/index-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/routes/index-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/routes/index-test.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/routes/login-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/routes\');\n    test(\'routing-simulator/tests/unit/routes/login-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/routes/login-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/routes/login-test.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/routes/messages-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/routes\');\n    test(\'routing-simulator/tests/unit/routes/messages-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/routes/messages-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/routes/messages-test.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/routes/users-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/routes\');\n    test(\'routing-simulator/tests/unit/routes/users-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/routes/users-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/routes/users-test.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/utils/ajax-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/utils\');\n    test(\'routing-simulator/tests/unit/utils/ajax-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/utils/ajax-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/utils/ajax-test.jshint.js");

;eval("define(\"routing-simulator/tests/routing-simulator/tests/unit/utils/poller-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routing-simulator/tests/unit/utils\');\n    test(\'routing-simulator/tests/unit/utils/poller-test.js should pass jshint\', function() { \n      ok(true, \'routing-simulator/tests/unit/utils/poller-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/routing-simulator/tests/unit/utils/poller-test.jshint.js");

;eval("define(\"routing-simulator/tests/test-helper\", \n  [\"routing-simulator/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=routing-simulator/tests/test-helper.js");

;eval("define(\"routing-simulator/tests/unit/controllers/admin-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:admin\', \'AdminController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/controllers/admin-test.js");

;eval("define(\"routing-simulator/tests/unit/controllers/connections-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:connections\', \'ConnectionsController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/controllers/connections-test.js");

;eval("define(\"routing-simulator/tests/unit/controllers/login-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:login\', \'LoginController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/controllers/login-test.js");

;eval("define(\"routing-simulator/tests/unit/controllers/messages-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:messages\', \'MessagesController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/controllers/messages-test.js");

;eval("define(\"routing-simulator/tests/unit/controllers/users-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:users\', \'UsersController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/controllers/users-test.js");

;eval("define(\"routing-simulator/tests/unit/routes/admin-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:admin\', \'AdminRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/routes/admin-test.js");

;eval("define(\"routing-simulator/tests/unit/routes/index-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:index\', \'IndexRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/routes/index-test.js");

;eval("define(\"routing-simulator/tests/unit/routes/login-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:login\', \'LoginRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/routes/login-test.js");

;eval("define(\"routing-simulator/tests/unit/routes/messages-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:messages\', \'MessagesRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/routes/messages-test.js");

;eval("define(\"routing-simulator/tests/unit/routes/users-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:users\', \'UsersRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/routes/users-test.js");

;eval("define(\"routing-simulator/tests/unit/utils/ajax-test\", \n  [\"routing-simulator/utils/ajax\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var ajax = __dependency1__[\"default\"];\n\n    module(\'ajax\');\n\n    // Replace this with your real tests.\n    test(\'it works\', function() {\n      var result = ajax();\n      ok(result);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/utils/ajax-test.js");

;eval("define(\"routing-simulator/tests/unit/utils/poller-test\", \n  [\"routing-simulator/utils/poller\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var poller = __dependency1__[\"default\"];\n\n    module(\'poller\');\n\n    // Replace this with your real tests.\n    test(\'it works\', function() {\n      var result = poller();\n      ok(result);\n    });\n  });//# sourceURL=routing-simulator/tests/unit/utils/poller-test.js");

;eval("define(\"routing-simulator/tests/utils/ajax.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - utils\');\n    test(\'utils/ajax.js should pass jshint\', function() { \n      ok(true, \'utils/ajax.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/utils/ajax.jshint.js");

;eval("define(\"routing-simulator/tests/utils/poller.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - utils\');\n    test(\'utils/poller.js should pass jshint\', function() { \n      ok(true, \'utils/poller.js should pass jshint.\'); \n    });\n  });//# sourceURL=routing-simulator/tests/utils/poller.jshint.js");

/* jshint ignore:start */

define('routing-simulator/config/environment', ['ember'], function(Ember) {
  var prefix = 'routing-simulator';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */



});

if (runningTests) {
  require("routing-simulator/tests/test-helper");
} else {
  require("routing-simulator/app")["default"].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}



/* jshint ignore:end */
